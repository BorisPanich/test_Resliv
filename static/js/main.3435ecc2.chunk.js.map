{"version":3,"sources":["Components/Employees/Employees.module.sass","Components/Header/Header.module.sass","Components/Main/Main.module.sass","Redux/employeesReducer.ts","Components/Main/Main.tsx","Components/Main/MainContainer.tsx","Components/Error404/Error404.tsx","Components/Error404/Error404Container.tsx","API/api.ts","Components/Employees/Employe.tsx","Components/Employees/Employees.tsx","Components/Employees/EmployeesContainer.tsx","Components/Routes/Routes.tsx","Components/Header/Header.tsx","App.tsx","Redux/store.ts","index.tsx"],"names":["module","exports","ACTION_TYPE","Main","className","s","mainOverlay","MainContainer","Error404","error404Overlay","Error404Container","instance","axios","create","baseURL","api","get","id","delete","name","newUser","last_name","avatar","mail","post","initialState","users","loading","setLoading","status","type","LOADING_EMPLOYEES","payload","addEmploy","ADD_EMPLOY","removeEmploy","REMOVE_EMPLOY","addEmployTC","dispatch","a","data","responseName","console","log","Employe","React","memo","props","employeesOverlay","user","first_name","src","alt","email","onClick","removeUser","Employees","usersWrapper","map","u","key","addNewUserWrapper","addUser","EmployeesContainer","useDispatch","useSelector","state","employees","useEffect","SET_EMPLOYEES","removeEmployTC","PATH","Routes","path","exact","render","to","Header","navOverlay","item","activeClassName","activeLink","App","rootReducer","combineReducers","action","filter","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3435ecc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"Employees_usersWrapper__E8yl3\",\"addNewUserWrapper\":\"Employees_addNewUserWrapper__ivPbk\",\"employeesOverlay\":\"Employees_employeesOverlay__28lbG\",\"user\":\"Employees_user__PxhI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navOverlay\":\"Header_navOverlay__1Bogx\",\"item\":\"Header_item__2Oob8\",\"activeLink\":\"Header_activeLink__ykfwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainOverlay\":\"Main_mainOverlay__2TEFr\"};","import { UserType} from \"../Types/Types\";\nimport {Dispatch} from \"redux\";\nimport {api} from \"../API/api\";\n\nexport enum ACTION_TYPE {\n  LOADING_EMPLOYEES = 'EMPLOYEES/LOADING_EMPLOYEES',\n  SET_EMPLOYEES = 'EMPLOYEES/SET_EMPLOYEES',\n  ADD_EMPLOY = 'EMPLOYEES/ADD_EMPLOY',\n  REMOVE_EMPLOY = 'EMPLOYEES/REMOVE_EMPLOY',\n}\n\nconst initialState = {\n  users: [] as Array<UserType>,\n  loading: false\n}\n\ntype initialStateType = typeof initialState\ntype emplActionType = ReturnType<typeof setLoading>\n                    | ReturnType<typeof setEmployees>\n                    | ReturnType<typeof addEmploy>\n                    | ReturnType<typeof removeEmploy>\n\nexport const employeesReducer = (state: initialStateType = initialState, action: emplActionType) => {\n  switch (action.type) {\n\n    case ACTION_TYPE.LOADING_EMPLOYEES: {\n      return {\n        ...state,\n        loading: action.payload\n      }\n    }\n\n    case ACTION_TYPE.SET_EMPLOYEES: {\n      return {\n        ...state,\n        users: action.payload\n      }\n    }\n\n    case ACTION_TYPE.ADD_EMPLOY: {\n      return {\n        ...state,\n        users: [\n          ...state.users,\n          {\n            id: +(action.payload.id),\n            email: '',\n            first_name: action.payload.name,\n            last_name: '',\n            avatar: ''\n          }\n        ]\n      }\n    }\n\n    case ACTION_TYPE.REMOVE_EMPLOY: {\n      return {\n        ...state,\n        users: state.users.filter( (u: UserType) => u.id !== action.payload)\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nexport const setLoading = (status: boolean) => ({ type: ACTION_TYPE.LOADING_EMPLOYEES, payload: status}as const)\nexport const setEmployees = (users: Array<UserType>) => ({ type: ACTION_TYPE.SET_EMPLOYEES, payload: users}as const)\nexport const addEmploy = (id: string, name: string) => ({ type: ACTION_TYPE.ADD_EMPLOY, payload: {id, name}}as const)\nexport const removeEmploy = (id: number) => ({ type: ACTION_TYPE.REMOVE_EMPLOY, payload: id} as const)\n\nexport const fetchEmployeesTC = () => async (dispatch: Dispatch) => {\n  dispatch(setLoading(true))\n  try{\n    const {\n      status,\n      data: {data}\n    } = await api.getUsers()\n    if (status === 200) {\n      dispatch(setEmployees(data))\n    } else {\n      console.log ('ошибка получения данных от сервера')\n    }\n  }\n  catch (error) {\n    console.log('Error: ', {...error})\n  }\n  finally {\n    dispatch(setLoading(false))\n  }\n}\n\nexport const removeEmployTC = (id: number) => async (dispatch: Dispatch) => {\n  dispatch(setLoading(true));\n\n  try {\n    const { status } = await api.removeEmploy(id);\n\n    if (status === 204) {\n      dispatch(removeEmploy(id));\n    }\n  } catch (error) {\n    console.log('Error: ', { ...error });\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n\nexport const addEmployTC = (name: string) => async (dispatch: Dispatch) => {\n  dispatch(setLoading(true));\n\n  try {\n    const {\n      status,\n      data: { id, name: responseName },\n    } = await api.addEmploy(name);\n\n    if (status === 201) {\n      dispatch(addEmploy(id, responseName));\n    }\n  } catch (error) {\n    console.log('Error: ', { ...error });\n  } finally {\n    dispatch(setLoading(false));\n  }\n};","import React from \"react\";\nimport s from './Main.module.sass'\n\nexport const Main = () => {\n  return (\n    <div className={s.mainOverlay}>\n      <h4>main page</h4>\n    </div>\n  )\n}","import React from \"react\"\nimport {Main} from './Main'\n\nexport const MainContainer = () => {\n  return <Main />\n}","import React from \"react\";\nimport s from './Error404.module.sass'\n\nexport const Error404: React.FC<any> = () => {\n  return <div className={s.error404Overlay}>\n    <h2>.....Page not found.....</h2>\n  </div>\n}\n","import React from \"react\"\nimport {Error404} from \"./Error404\";\n\nexport const Error404Container: React.FC<any> = () => {\n  return <Error404 />\n}\n","import axios, {AxiosResponse} from 'axios'\nimport {UserType, ResponseType} from \"../Types/Types\";\n\nconst instance = axios.create({\n  baseURL: 'https://reqres.in/api/'\n})\n\nexport const api = {\n  getUsers(): Promise<AxiosResponse<ResponseType<Array<UserType>>>> {\n    return instance.get<ResponseType<Array<UserType>>>(`users?per_page=12`)\n  },\n  removeEmploy(id: number): Promise<AxiosResponse> {\n    return instance.delete(`users/${id}`)\n  },\n  addEmploy(name: string) {\n    const newUser = {\n      id: 100500,\n      name,\n      last_name: 'bar',\n      avatar: 'url1',\n      mail: 'qweqw@qwe.er'\n    }\n    return instance.post(`users`, newUser)\n  }\n}","import React from 'react'\nimport s from './Employees.module.sass'\nimport {UserType} from \"../../Types/Types\"\n\ntype EmployeType = UserType & {\n  removeUser: (id: number) => void\n}\n\nexport const Employe = React.memo(( props: EmployeType) => {\n    return  <div className={s.employeesOverlay}>\n      <fieldset className={s.user}>\n        <legend> {props.first_name} {props.last_name}</legend>\n        <img src = {props.avatar} alt=\"\"/>\n        <p>email: {props.email}</p>\n        <button onClick = { () => props.removeUser(props.id) }>delete</button>\n      </fieldset>\n    </div>\n  }\n)","import React from \"react\"\nimport {UserType} from \"../../Types/Types\"\nimport s from './Employees.module.sass'\nimport {Employe} from \"./Employe\"\n\ntype EmployeesType = {\n  users: Array<UserType>\n  addUser: () => void\n  removeUser: (id: number) => void\n}\n\nexport const Employees = (props: EmployeesType) => {\n  return <div>\n    <h4>Список сотрудников:</h4>\n    <div className={s.usersWrapper}>\n      { props.users.map( (u: UserType, key: number) => {  return <div key={key}>\n                                                                    <Employe id = {u.id}\n                                                                             first_name={u.first_name}\n                                                                             last_name={u.last_name}\n                                                                             email={u.email}\n                                                                             avatar={u.avatar}\n                                                                             removeUser = { props.removeUser} />\n                                                                  </div> })}\n    </div>\n    <div className={s.addNewUserWrapper}>\n      <button onClick={ props.addUser }>new employe</button>\n    </div>\n  </div>\n}\n\n\n","import React, {useEffect} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {RootStateType} from \"../../Redux/store\"\nimport {UserType} from \"../../Types/Types\"\nimport {addEmployTC, fetchEmployeesTC, removeEmployTC} from '../../Redux/employeesReducer'\nimport {Employees} from \"./Employees\";\n\nexport const EmployeesContainer = () => {\n  const dispatch = useDispatch()\n\n  const users = useSelector<RootStateType, Array<UserType>>(state => state.employees.users)\n\n  useEffect(()=> {\n    dispatch(fetchEmployeesTC())\n  }, [dispatch])\n\n  const addUser = (name: string = 'Aleksei') => {\n    console.log('add user name: ', name)\n    dispatch(addEmployTC(name))\n  }\n  const removeUser = (id: number) => {\n    console.log('remove user id:', id)\n    dispatch(removeEmployTC(id))\n  }\n\n  return <Employees users = {users}\n                    addUser={addUser}\n                    removeUser = {removeUser}/>\n}","import React from 'react'\nimport { Redirect, Route, Switch} from 'react-router-dom'\nimport {MainContainer} from \"../Main/MainContainer\";\nimport {Error404Container} from \"../Error404/Error404Container\";\nimport {EmployeesContainer} from \"../Employees/EmployeesContainer\";\n\n\nexport const PATH = {\n  MAIN: '/main',\n  EMPLOYEES: '/employees'\n}\n\nfunction Routes() {\n  return (\n    <div>\n      <Switch>\n        <Route path = '/' exact render = { () => <Redirect to = {PATH.MAIN}/>} />\n        <Route path = {PATH.MAIN} render = { () => <MainContainer />} />\n        <Route path = {PATH.EMPLOYEES} render={ () => <EmployeesContainer />} />\n        <Route path = {'/404'} render={ () => <Error404Container />} />\n        <Redirect path = {'*'} to={'/404'}/>\n      </Switch>\n    </div>\n  )\n}\n\nexport default  Routes","import React from \"react\"\nimport {PATH} from \"../Routes/Routes\"\nimport s from './Header.module.sass'\nimport {NavLink} from \"react-router-dom\"\n\nexport const Header = () => {\n  return (\n    <nav className={s.navOverlay}>\n      <div className={s.item}>\n        <NavLink to = { PATH.MAIN} activeClassName = {s.activeLink}>Главная</NavLink>\n      </div>\n      <div className={s.item}>\n        <NavLink to = { PATH.EMPLOYEES} activeClassName = {s.activeLink}>Сотрудники</NavLink>\n      </div>\n    </nav>\n  )\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./Components/Header/Header\";\nimport Routes from \"./Components/Routes/Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\"\nimport thunkMiddleware from 'redux-thunk'\nimport {employeesReducer} from \"./employeesReducer\"\n\nconst rootReducer = combineReducers({\n  employees: employeesReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\nexport type RootStateType = ReturnType<typeof rootReducer>\n\n//@ts-ignore\nwindow.store = store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {Provider} from \"react-redux\"\nimport {HashRouter} from 'react-router-dom'\nimport {store} from \"./Redux/store\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}